{"version":3,"sources":["helpers/misc.js","components/Questionnaire.js","components/Home.js","locales/texts/intro/fr.md","locales/texts/intro/en.md","components/LegalMentions.js","locales/texts/legal-mentions/fr.md","locales/texts/legal-mentions/en.md","App.js","serviceWorker.js","index.js"],"names":["getOrInitObject","key","defaults","initialData","localStorage","getItem","JSON","parse","e","defaultData","id","genId","email","undefined","propositions","translate","lang","eventListener","questions","useState","data","setData","initialStage","initialIndex","length","stage","setStage","questionnaireIndex","setQuestionnaireIndex","reviewVisible","setReviewVisible","sendStatus","setSendStatus","useEffect","setItem","stringify","filter","proposition","Object","keys","find","indexOf","cleanData","setTimeout","el","document","querySelector","focus","handleEvent","type","payload","addSubscriber","currentText","currentProposition","currentPropositionType","questionsLabels","numberOfQuestions","emailIsValid","test","handleAddActivity","Array","from","reduce","res","index","createProposition","newData","handleNextStage","handleGoToSummary","handleGoToFinal","handleSubmit","withEmail","preventDefault","console","info","Math","random","handleToggleReviewVisible","Helmet","className","onClick","value","onChange","thatText","map","prop","handleSaveActiveText","target","placeHolder","disabled","onSubmit","thatEvent","reverse","propositionIndex","labels","p","i","question","questionIndex","source","to","locales","fr","en","EventListener","this","subscribers","fn","push","onEvent","forEach","subscriber","BasAppicExample","initialLang","localLang","browserLang","navigator","language","userLanguage","setLang","locale","style","cursor","exact","path","Home","Questionnaire","LegalMentions","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a99fbb9c.chunk.js","sourcesContent":["import {v4 as genId} from 'uuid';\n/**\n * Gets data from local storage or return default value\n * @param {*} key \n * @param {*} defaults \n */\nexport const getOrInitObject = (key, defaults = {}) => {\n  let initialData = localStorage.getItem(key);\n  if (initialData && typeof initialData === 'string') {\n    try {\n      initialData = JSON.parse(initialData)\n    } catch(e) {\n      initialData = defaults;\n    }\n  } else if (initialData) {\n    return initialData;\n  } else {\n    initialData = defaults;\n  }\n  return initialData;\n}\n\nexport const createProposition = (type, questions) => {\n  const id = genId();\n  const numberOfQuestions = questions[type].length;\n  return {\n    type,\n    id,\n    ...Array.from(Array(numberOfQuestions).keys())\n    .reduce((res, index) => ({\n      ...res,\n      [`question${index + 1}`]: ''\n    }), {})\n  }\n};\n\n/**\n * Remove propositions for which all fields are empty\n * @param {obj} data \n */\nexport const cleanData = data => {\n  return {\n    ...data,\n    propositions: data.propositions.filter(proposition => {\n      const nonEmptyField = Object.keys(proposition)\n      .find((key) => {\n        if (key.indexOf('question') === 0) {\n          return proposition[key].length > 0\n        }\n        return false;\n      })\n      return nonEmptyField !== undefined\n    })\n  }\n}","import React, {useState, useEffect} from 'react';\nimport {Helmet} from 'react-helmet';\nimport Textarea from 'react-textarea-autosize';\nimport {v4 as genId} from 'uuid';\nimport {getOrInitObject, createProposition, cleanData} from '../helpers/misc';\n\nconst defaultData = {\n  id: genId(),\n  email: undefined,\n  propositions: []\n}\n\n// min text length for answers\n// @todo put in config ?\nconst TEXT_LIMIT = 20;\n\nexport default function({\n  translate,\n  lang,\n  eventListener\n}) {\n  // registering questionnaire questions\n  const questions =  {\n    'develop': [\n      translate('to-develop-question-1'),\n      translate('to-develop-question-2'),\n      translate('to-develop-question-3'),\n      translate('to-develop-question-4'),\n      translate('to-develop-question-5'),\n    ],\n    'stop': [\n      translate('to-stop-question-1'),\n      translate('to-stop-question-2'),\n      translate('to-stop-question-3'),\n      translate('to-stop-question-4'),\n    ]\n  }\n  /**\n   * ==============\n   * Initial values\n   * ==============\n   */\n  const initialData = getOrInitObject('mayday/questionnaireData', defaultData);\n  // questionnaire responses data\n  const [data, setData] = useState(initialData);\n  const initialStage = +getOrInitObject('mayday/questionnaireStage', 0);\n  // index of the proposition being edited\n  let initialIndex = +getOrInitObject('questionnaireIndex', 0);\n  // prevent exceptions or issues with data\n  if (!data || initialIndex > data.propositions.length  - 1) {\n    initialIndex = 0;\n  }\n  /**\n   * ==============\n   * State definitions\n   * ==============\n   */\n  // questionnaire stage\n  // stage = state machine for the questionnaire views\n  // \"stage\" values :\n  // 0 = spash screen\n  // 1-(n-1) = number of the active question\n  // null = final screen (send your proposals);\n  const [stage, setStage] = useState(initialStage);\n  // index of the proposition being edited\n  const [questionnaireIndex, setQuestionnaireIndex] = useState(initialIndex);\n  // \"review your answers\" open/close state\n  const [reviewVisible, setReviewVisible] = useState(false);\n  // xhr status\n  const [sendStatus, setSendStatus] = useState(undefined);\n  /**\n   * ==============\n   * Localstorage savings\n   * ==============\n   */\n  // save data in localstorage at each change\n  // @todo could be debounced\n  useEffect(() => {\n    localStorage.setItem('mayday/questionnaireData', JSON.stringify(data));\n  });\n  \n  // save stage to local storage\n  useEffect(() => {\n    localStorage.setItem('mayday/questionnaireStage', stage);\n    if(stage === 0) {\n      setData(cleanData(data))\n      setReviewVisible(false);\n    }\n    // focusing on active textarea or input at each stage change\n    setTimeout(() => {\n      const el  = document.querySelector('textarea, input')\n      if (el) {\n        el.focus();\n      }\n    })\n  }, [stage]);\n  \n  // save currently edited proposition index\n  useEffect(() => {\n    localStorage.setItem('mayday/questionnaireIndex', questionnaireIndex);\n  }, [questionnaireIndex]);\n\n  // trick to enable reseting stage if questionnaire is clicked in nav\n  const handleEvent = function(type, payload) {\n    if (type === 'questionnaireClick') {\n      setStage(0);\n    }\n  }\n  useEffect(() => {\n    eventListener.addSubscriber(handleEvent)\n  }, [eventListener])\n\n  /**\n   * ==========================\n   * Temp variables\n   * ==========================\n   */\n  // capture current proposition data\n  const currentProposition = stage > 0 && questionnaireIndex < data.propositions.length && data.propositions[questionnaireIndex];\n  const currentPropositionType = currentProposition && currentProposition.type === 'develop' ? 'develop': 'stop';\n  \n  const questionsLabels = questions[currentPropositionType];\n  const numberOfQuestions = questionsLabels.length;\n\n  let currentText;\n  if (stage > 0 && stage < numberOfQuestions + 1) {\n    currentText = data.propositions[questionnaireIndex] ? data.propositions[questionnaireIndex][`question${stage}`] : '';\n  }\n  const emailIsValid = data.email && /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(data.email);\n\n  /**\n   * =========\n   * Callbacks\n   * =========\n   */\n  // add a new activity\n  const handleAddActivity = type => {\n    const proposition = createProposition(type, questions)\n    const newData = {\n      ...data,\n      propositions: [\n        ...data.propositions,\n        proposition\n      ]\n    }\n    setQuestionnaireIndex(data.propositions.length)\n    setData(newData);\n    setStage(1);\n  }\n  const handleStopActivity = () => handleAddActivity('stop', questions);\n  const handleDevelopActivity = () => handleAddActivity('develop', questions);\n\n  // go to next question\n  const handleNextStage = () => {\n    const nextStage = stage + 1;\n    setStage(nextStage);\n  }\n  // go to previous question\n  const handlePreviousStage = () => {\n    const previousStage = stage - 1;\n    setStage(previousStage);\n  }\n  // go to proposition choice\n  const handleGoToSummary = () => {\n    setStage(0);\n    setQuestionnaireIndex(0);\n  }\n  // go to send choice\n  const handleGoToFinal = () => {\n    setQuestionnaireIndex(undefined);\n    setStage(null);\n    setReviewVisible(false);\n  }\n  // save current question text\n  const handleSaveActiveText = (thatText) => {\n    const newData = {\n      ...data,\n      propositions: data.propositions.map((prop, index) => {\n        if (index === questionnaireIndex) {\n          return {\n            ...prop,\n            [`question${stage}`]: thatText\n          }\n        }\n        return prop;\n      })\n    }\n    setData(newData)\n  }\n  // register active textarea change\n  const handleActiveTextChange = (e) => {\n    handleSaveActiveText(e.target.value);\n  }\n  // register email input change\n  const handleEmailChange = (thatEvent) => {\n    setData({\n      ...data,\n      email: thatEvent.target.value,\n    })\n  }\n  // send questionnaire to API\n  const handleSubmit = (e, withEmail) => {\n    if (e) {\n      e.preventDefault();\n    }\n    console.info('mock:: submit', {\n      ...data, \n      email: withEmail ? data.email : undefined,\n      lang\n    })\n    setSendStatus('sending');\n    // @todo replace with real api call\n    // this is a mock for the actual request\n    setTimeout(() => {\n      if (Math.random() > .5) {\n        setSendStatus('error');\n      } else {\n        setSendStatus('success');\n      }\n      setTimeout(() => {\n        setSendStatus(undefined)\n      }, 4000)\n    }, 2000)\n  }\n  const handleSubmitWithEmail = (e) => {\n    handleSubmit(e, true)\n  }\n\n  // reset questionnaire state (ux + data)\n  const handleReset = () => {\n    setStage(0);\n    setData(defaultData);\n    setSendStatus(undefined);\n  }\n\n  // set \"review my propositions\" visibility\n  const handleToggleReviewVisible = () => {\n    setReviewVisible(!reviewVisible);\n  }\n\n  return (\n    <div>\n      <Helmet>\n        <title>{translate('website-title')} | {translate('questionnaire')}</title>\n      </Helmet>\n      <div>\n        {\n          stage === 0 ?\n          <div className={`question-container ${reviewVisible ? 'normalized': ''}`}>\n            <ul className={`big-select ${reviewVisible ? 'hidden' : ''}`}>\n              <li><button onClick={handleStopActivity}>{translate('add-activity-to-stop')}</button></li>\n              <li><button onClick={handleDevelopActivity}>{translate('add-activity-to-develop')}</button></li>\n            </ul>\n\n            <ul className=\"buttons-row\">\n              {\n                data.propositions.length || reviewVisible ?\n              <li><button className={reviewVisible ? 'active' : ''} onClick={handleToggleReviewVisible}>{reviewVisible ? translate('hide-existing-propositions') : translate('review-your-propositions')} {!reviewVisible && `(${data.propositions.length})`}</button></li>\n                : null\n              }\n              {data.propositions.length || reviewVisible ?\n               <li><button className=\"important-button\" onClick={handleGoToFinal} >{translate('go-to-submit')}</button></li>\n              : null}\n              \n            </ul>\n          </div>\n          : null\n        }\n        {\n          stage < numberOfQuestions + 1 && stage > 0 ?\n          <div className=\"question-container\">\n            <h2>{questionsLabels[stage - 1]}</h2>\n            \n            <Textarea value={currentText} onChange={handleActiveTextChange} placeHolder={translate('write-here')} />\n            <ul className=\"buttons-row\">\n            {\n              stage > 1 ?\n              <li><button onClick={handlePreviousStage}>{translate('previous-question')}</button></li>\n              : null\n            }\n            {\n              /*\n              <li>\n              <button onClick={handleGoToSummary}>\n                {translate('go-back-to-summary')}\n              </button>\n              </li>\n              */\n            }\n            {\n              stage < numberOfQuestions ?\n              <li><button disabled={currentText.length < TEXT_LIMIT} className=\"important-button\" onClick={handleNextStage}>{translate('next-question')}</button></li>\n              : <li><button className=\"important-button\" disabled={currentText.length < TEXT_LIMIT} onClick={handleNextStage}>{translate('validate-proposition')}</button></li>\n            }\n            </ul>\n            \n          </div>\n          : null\n        }\n        {\n          stage === numberOfQuestions + 1 ?\n          <div className=\"question-container\">\n            <h2>{translate('thank-you')}</h2>\n            <ul className=\"big-select\">\n              <li><button onClick={handleGoToSummary}>{translate('add-another-proposition')}</button></li>\n              <li><button className=\"important-button\" onClick={handleGoToFinal}>{translate('go-to-submit')}</button></li>\n            </ul>\n          </div> : null\n        }\n        {\n          stage === null ?\n          <form className={`question-container ${reviewVisible ? 'normalized': ''}`} onSubmit={handleSubmit}>\n            {\n              reviewVisible ? null :\n              <div>\n                <h1 className=\"padded-container\">{translate('submit-form-explanation')}</h1>\n                <div className=\"important-section\">\n                  {/* <h2>{translate('submit-form-with-contact')}</h2> */}\n                  <p>{translate('submit-form-anonymously-explanation')}</p>\n                  <p>{translate('submit-form-with-contact-explanation')}</p>\n                  <field>\n                    <input type=\"email\" onChange={handleEmailChange} value={data.email || ''} placeHolder={translate('email-prompt')} />\n                  </field>\n                  <ul className=\"buttons-row\">\n                  <li>\n                    <button  onClick={handleSubmit} type=\"submit\">{translate('submit-form-anonymously')}</button>\n                  </li>\n                  <li>\n                      <button disabled={!data.email || !emailIsValid} className=\"important-button\" onClick={handleSubmitWithEmail} type=\"submit\">{translate('submit-form-with-contact')}</button>\n                  </li>\n                  \n                    \n                  </ul>\n                </div>\n              </div>\n            }\n            \n            <ul className=\"buttons-row padded-container\">\n              <li>\n                <button className={reviewVisible ? 'active' : ''} type=\"button\" onClick={handleToggleReviewVisible}>{reviewVisible ? translate('hide-existing-propositions') : translate('review-your-propositions')}  {!reviewVisible && `(${data.propositions.length})`}</button>\n              </li>\n              <li>\n                <button onClick={handleGoToSummary}>{translate('add-proposition')}</button>\n              </li>\n            </ul>\n          </form>\n          : null\n        }\n        {\n          sendStatus ?\n          <div className=\"status-container\">\n            <div className=\"status-content\">\n              <i>{translate(sendStatus)}</i>\n            </div>\n          </div>\n          : null\n        }\n        \n        {\n          (stage === 0 || stage === null) && data.propositions.length && reviewVisible ? \n          <div className=\"propositions-container\">\n            <h2 className=\"padded-container\">{translate('summary-title')} ({data.propositions.length})</h2>\n            {\n              data.propositions\n              .reverse()\n              .map((proposition, propositionIndex) => {\n                const {type} = proposition;\n                const labels = type === 'develop' ? [\n                  translate('to-develop-question-1'),\n                  translate('to-develop-question-2'),\n                  translate('to-develop-question-3'),\n                  translate('to-develop-question-4'),\n                  translate('to-develop-question-5'),\n                ] : \n                [\n                  translate('to-stop-question-1'),\n                  translate('to-stop-question-2'),\n                  translate('to-stop-question-3'),\n                  translate('to-stop-question-4'),\n                ];\n\n                const handleEditProposition = () => {\n                  setQuestionnaireIndex(propositionIndex);\n                  setStage(1)\n                }\n\n                const handleDeleteProposition = () => {\n                  const newData = {\n                    ...data,\n                    propositions: data.propositions.filter((p, i) => i !== propositionIndex)\n                  }\n                  setData(newData)\n                  if (newData.propositions.length === 0) {\n                    setReviewVisible(false);\n                  }\n                }\n                \n                return (\n                  <div key={propositionIndex} className=\"proposition\">\n                    <h3>\n                      <span className=\"proposition-title\">\n                        {translate('Proposition')} {data.propositions.length - propositionIndex} ({translate(proposition.type === 'stop' ? 'add-activity-to-stop': 'add-activity-to-develop' )})\n                      </span>\n                      <span className=\"small-buttons-container\">\n                        <button onClick={handleEditProposition}>\n                          {translate('edit')}\n                        </button>\n                        <button onClick={handleDeleteProposition}>\n                          {translate('delete')}\n                        </button>\n                      </span>\n                    </h3>\n                    \n                    {\n                      labels.map((question, questionIndex) => {\n                        const handleEdit = () => {\n                          setQuestionnaireIndex(propositionIndex);\n                          setStage(questionIndex + 1)\n                        }\n                        return (\n                          <div className=\"question\" key={questionIndex}>\n                            <h4>{question}</h4>\n                            <blockquote>\n                              {proposition[`question${questionIndex + 1}`]}\n                            </blockquote>\n                            <button onClick={handleEdit}>\n                              {translate('edit')}\n                            </button>\n                          </div>\n                        )\n                      })\n                    }\n                  </div>\n                )\n              \n              })\n            }\n          </div>\n          : null\n        }\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport Md from 'react-markdown';\nimport {Link} from 'react-router-dom';\nimport {Helmet} from 'react-helmet';\n\nimport introFr from '!!raw-loader!../locales/texts/intro/fr.md';/* eslint import/no-webpack-loader-syntax : 0 */\nimport introEn from '!!raw-loader!../locales/texts/intro/en.md';/* eslint import/no-webpack-loader-syntax : 0 */\n\nexport default function({\n  translate,\n  lang\n}) {\n  return (\n    <div>\n      <Helmet>\n        <title>{translate('website-title')}</title>\n      </Helmet>\n      <div className=\"question-container\">\n        <h1>{translate('website-title')}</h1>\n        <Md source={lang === 'fr' ? introFr : introEn} />\n        <Link className=\"important-link\" to=\"questionnaire\">\n          {translate('questionnaire-prompt')}\n        </Link>\n      </div>\n    </div>\n  )\n}","export default \"Profitons de la suspension forcée de nos activités pour dresser l'inventaire de celles que nous aimerions voir reprendre à l'identique (comme avant), mieux, ou qu'elles ne reprennent pas du tout. Le but est de faire la liste des activités dont vous vous sentez privées par la crise actuelle et qui vous donne la sensation d’une atteinte à vos conditions essentielles de subsistance. \\n\\nCet exercice sera d’autant plus utile qu’il portera sur une expérience personnelle directement vécue. On ne cherchera donc pas à nommer des entités abstraites sur lequel on n'a peu de prise (le capitalisme, le système, le pétrole en général etc...) mais de partir de cas extrêmement précis rencontrés dans le quotidien.\\n\\nAttention : ceci n’est pas un questionnaire, il ne s’agit pas d’un sondage. C’est une aide à l'auto-description, c'est -à-dire un exercice qui cherche à décrire vos moyens de subsistance et ce à quoi vous êtes attachés.\";","export default \"Let’s take advantage of the enforced suspension of most activities to set out the inventory of those among them we would like to see not come back and those, on the other hand, that we would like to see developed.\\n \\nIt will be all the more useful if the inventory relates to actually lived personal experience. The point is therefore not trying to name abstract entities over which we have little control (capitalism, the \\\"system\\\", oil in general, etc...) but to start from extremely precise cases encountered in your daily life.\\n \\nWarning: this is neither a questionnaire nor a poll. It is an aid to \\\"self-description\\\", being an exercise that starts with your concerns and attachments, and goes on to describe your means of subsistence.\";","import React from 'react';\nimport {Helmet} from 'react-helmet';\nimport Md from 'react-markdown';\n\nimport mentionsFr from '!!raw-loader!../locales/texts/legal-mentions/fr.md';/* eslint import/no-webpack-loader-syntax : 0 */\nimport mentionsEn from '!!raw-loader!../locales/texts/legal-mentions/en.md';/* eslint import/no-webpack-loader-syntax : 0 */\n\nexport default function({\n  translate,\n  lang\n}) {\n  return (\n    <div>\n      <Helmet>\n        <title>{translate('website-title')} | {translate('legal-mentions')}</title>\n      </Helmet>\n      <h1>{translate('legal-mentions')}</h1>\n      <Md source={lang === 'fr' ? mentionsFr : mentionsEn} />\n    </div>\n  )\n}","export default \"Legal mentions fr\";","export default \"Legal mentions english\";","import React, {useState, useEffect} from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink as Link\n} from \"react-router-dom\";\n\nimport Questionnaire from './components/Questionnaire';\nimport Home from './components/Home';\nimport LegalMentions from './components/LegalMentions';\n\nimport frLocale from './locales/fr';\nimport enLocale from './locales/en';\n\nconst locales = {\n  fr: frLocale,\n  en: enLocale\n};\n\nconst EventListener = function() {\n  this.subscribers = []\n  this.addSubscriber = (fn) => {\n    this.subscribers.push(fn)\n  }\n  this.onEvent = function(key, payload) {\n    this.subscribers.forEach(subscriber => {\n      subscriber(key, payload)\n    })\n  }\n}\n\nexport default function BasAppicExample() {\n  /**\n   * Get initial lang\n   */\n  let initialLang = 'fr';\n  const localLang = localStorage.getItem('mayday/lang');\n  const browserLang = navigator.language || navigator.userLanguage;\n  if (localLang) {\n    initialLang = localLang\n  }\n  else if (browserLang) {\n    initialLang = browserLang === 'fr' ? 'fr' : 'en';\n  }\n\n  const [lang, setLang] = useState(initialLang);\n\n  /**\n   * Save lang change to local storage\n   */\n  useEffect(() => {\n    localStorage.setItem('mayday/lang', lang);\n  }, [lang]);\n\n  const handleSwitchLang = () => {\n    if (lang === 'fr') {\n      setLang('en');\n    } else {\n      setLang('fr');\n    }\n  }\n  /**\n   * Set translate fn to use throughout the app\n   */\n  const locale = locales[lang];\n  const translate = id => {\n    return locale[id] || id;\n  }\n\n  const [eventListener] = useState(new EventListener())\n\n  const handleQuestionnaireClick = () => {\n    eventListener.onEvent('questionnaireClick')\n  }\n\n\n  return (\n    <Router>\n      \n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\" className=\"home-link\"><span>{translate('website-title')}</span></Link>\n            </li>\n            <li>\n              <Link onClick={handleQuestionnaireClick} to=\"/questionnaire\"><span>{translate('questionnaire')}</span></Link>\n            </li>\n            <li>\n              <Link to=\"/mentions\"><span>{translate('legal-mentions')}</span></Link>\n            </li>\n            <li>\n              <span style={{cursor: 'pointer'}} onClick={handleSwitchLang}>\n                {lang === 'fr' ? <b>fr</b> : 'fr'}/{lang === 'fr' ? 'en' : <b>en</b>}\n              </span>\n            </li>\n          </ul>\n        </nav>\n\n        <main>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home {...{translate, lang}} />\n            </Route>\n            <Route path=\"/questionnaire\">\n              <Questionnaire {...{translate, lang, eventListener}} />\n            </Route>\n            <Route path=\"/mentions\">\n              <LegalMentions {...{translate, lang}} />\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}