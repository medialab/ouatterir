{"version":3,"sources":["helpers/misc.js","helpers/client.js","locales/texts/intro/fr.md","locales/texts/intro/en.md","components/Questionnaire.js","components/Home.js","components/LegalMentions.js","locales/texts/legal-mentions/fr.md","locales/texts/legal-mentions/en.md","App.js","index.js"],"names":["getOrInitObject","key","defaults","initialData","localStorage","getItem","JSON","parse","e","API_URL","process","REACT_APP_API_URL","defaultData","id","genId","email","undefined","propositions","translate","lang","eventListener","questions","useState","data","setData","initialStage","initialIndex","length","stage","setStage","questionnaireIndex","setQuestionnaireIndex","reviewVisible","setReviewVisible","sendStatus","setSendStatus","shareVisible","setShareVisible","useEffect","setItem","stringify","filter","proposition","Object","keys","find","indexOf","cleanData","setTimeout","el","document","querySelector","focus","window","scrollTo","top","behavior","offsetTop","console","log","handleEvent","type","payload","addSubscriber","currentText","currentProposition","currentPropositionType","questionsLabels","numberOfQuestions","emailIsValid","test","handleAddActivity","Array","from","reduce","res","index","createProposition","newData","handleStopActivity","handleDevelopActivity","handleNextStage","nextStage","handlePreviousStage","handleActiveTextChange","thatText","map","prop","handleSaveActiveText","target","value","handleEmailChange","thatEvent","handleGivenNameChange","givenName","handleFamilyNameChange","familyName","handleWorkshopContactChange","workshopContact","handleAreaOfExpertiseChange","areaOfExpertise","handleSubmit","preventDefault","finalData","axios","method","url","postAnswer","then","catch","error","handleToggleReviewVisible","renderSubmitForm","className","onChange","placeholder","onClick","checked","disabled","renderProofRead","reverse","propositionIndex","labels","p","i","question","questionIndex","Helmet","source","introFr","introEn","label","trim","onSubmit","to","locales","fr","en","EventListener","this","subscribers","fn","push","onEvent","forEach","subscriber","BasAppicExample","initialLang","localLang","browserLang","navigator","language","userLanguage","setLang","locale","style","cursor","exact","path","Home","Questionnaire","LegalMentions","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d275511d.chunk.js","sourcesContent":["import {v4 as genId} from 'uuid';\n/**\n * Gets data from local storage or return default value\n * @param {*} key \n * @param {*} defaults \n */\nexport const getOrInitObject = (key, defaults = {}) => {\n  let initialData = localStorage.getItem(key);\n  if (initialData && typeof initialData === 'string') {\n    try {\n      initialData = JSON.parse(initialData)\n    } catch(e) {\n      initialData = defaults;\n    }\n  } else if (initialData) {\n    return initialData;\n  } else {\n    initialData = defaults;\n  }\n  return initialData;\n}\n\nexport const createProposition = (type, questions) => {\n  const id = genId();\n  const numberOfQuestions = questions[type].length;\n  return {\n    type,\n    id,\n    ...Array.from(Array(numberOfQuestions).keys())\n    .reduce((res, index) => ({\n      ...res,\n      [`question${index + 1}`]: ''\n    }), {})\n  }\n};\n\n/**\n * Remove propositions for which all fields are empty\n * @param {obj} data \n */\nexport const cleanData = data => {\n  return {\n    ...data,\n    propositions: data.propositions.filter(proposition => {\n      const nonEmptyField = Object.keys(proposition)\n      .find((key) => {\n        if (key.indexOf('question') === 0) {\n          return proposition[key].length > 0\n        }\n        return false;\n      })\n      return nonEmptyField !== undefined\n    })\n  }\n}","import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || '//localhost:4000/';\n\nexport const postAnswer = data => {\n  return axios({\n    method: 'POST',\n    url: `${API_URL}answer`,\n    data: { data }\n  })\n}\n","export default \"Profitons de la suspension forcée de nos activités pour dresser l'inventaire de celles que nous aimerions voir reprendre à l'identique (comme avant), mieux, ou qu'elles ne reprennent pas du tout. Le but est de faire la liste des activités dont vous vous sentez privées par la crise actuelle et qui vous donne la sensation d’une atteinte à vos conditions essentielles de subsistance. \\n\\nCet exercice sera d’autant plus utile qu’il portera sur une expérience personnelle directement vécue. On ne cherchera donc pas à nommer des entités abstraites sur lequel on n'a peu de prise (le capitalisme, le système, le pétrole en général etc...) mais de partir de cas extrêmement précis rencontrés dans le quotidien.\\n\\nAttention : ceci n’est pas un questionnaire, il ne s’agit pas d’un sondage. C’est une aide à l'auto-description, c'est -à-dire un exercice qui cherche à décrire vos moyens de subsistance et ce à quoi vous êtes attachés.\";","export default \"Let’s take advantage of the enforced suspension of most activities to set out the inventory of those among them we would like to see not come back and those, on the other hand, that we would like to see developed.\\n \\nIt will be all the more useful if the inventory relates to actually lived personal experience. The point is therefore not trying to name abstract entities over which we have little control (capitalism, the \\\"system\\\", oil in general, etc...) but to start from extremely precise cases encountered in your daily life.\\n \\nWarning: this is neither a questionnaire nor a poll. It is an aid to \\\"self-description\\\", being an exercise that starts with your concerns and attachments, and goes on to describe your means of subsistence.\";","import React, {useState, useEffect} from 'react';\nimport {Helmet} from 'react-helmet';\nimport Md from 'react-markdown';\nimport Textarea from 'react-textarea-autosize';\nimport {v4 as genId} from 'uuid';\nimport {getOrInitObject, createProposition, cleanData} from '../helpers/misc';\nimport {postAnswer} from '../helpers/client';\n\nimport introFr from '!!raw-loader!../locales/texts/intro/fr.md';/* eslint import/no-webpack-loader-syntax : 0 */\nimport introEn from '!!raw-loader!../locales/texts/intro/en.md';/* eslint import/no-webpack-loader-syntax : 0 */\n\nconst defaultData = {\n  id: genId(),\n  email: undefined,\n  propositions: []\n}\n\n// min text length for answers\n// @todo put in config ?\nconst TEXT_LIMIT = 150;\n\nexport default function({\n  translate,\n  lang,\n  eventListener\n}) {\n  // registering questionnaire questions\n  const questions =  {\n    'develop': [\n      translate('to-develop-question-1'),\n      translate('to-develop-question-2'),\n      translate('to-develop-question-3'),\n      translate('to-develop-question-4'),\n      translate('to-develop-question-5'),\n    ],\n    'stop': [\n      translate('to-stop-question-1'),\n      translate('to-stop-question-2'),\n      translate('to-stop-question-3'),\n      translate('to-stop-question-4'),\n    ]\n  }\n  /**\n   * ==============\n   * Initial values\n   * ==============\n   */\n  const initialData = getOrInitObject('mayday/questionnaireData', defaultData);\n  // questionnaire responses data\n  const [data, setData] = useState(initialData);\n  const initialStage = +getOrInitObject('mayday/questionnaireStage', 0);\n  // index of the proposition being edited\n  let initialIndex = +getOrInitObject('questionnaireIndex', 0);\n  // prevent exceptions or issues with data\n  if (!data || initialIndex > data.propositions.length  - 1) {\n    initialIndex = 0;\n  }\n  /**\n   * ==============\n   * State definitions\n   * ==============\n   */\n  // questionnaire stage\n  // stage = state machine for the questionnaire views\n  // \"stage\" values :\n  // 0 = spash screen\n  // 1-(n-1) = number of the active question\n  // null = final screen (send your proposals);\n  const [stage, setStage] = useState(initialStage);\n  // index of the proposition being edited\n  const [questionnaireIndex, setQuestionnaireIndex] = useState(initialIndex);\n  // \"review your answers\" open/close state\n  const [reviewVisible, setReviewVisible] = useState(false);\n  // xhr status\n  const [sendStatus, setSendStatus] = useState(undefined);\n\n  const [shareVisible, setShareVisible] = useState(false);\n  /**\n   * ==============\n   * Localstorage savings\n   * ==============\n   */\n  // save data in localstorage at each change\n  // @todo could be debounced\n  useEffect(() => {\n    localStorage.setItem('mayday/questionnaireData', JSON.stringify(data));\n  });\n  \n  // save stage to local storage\n  useEffect(() => {\n    localStorage.setItem('mayday/questionnaireStage', stage);\n    if(stage === 0) {\n      setData(cleanData(data))\n      setReviewVisible(false);\n    }\n    setReviewVisible(false);\n    // focusing on active textarea or input at each stage change\n    setTimeout(() => {\n      const el  = document.querySelector('textarea.active, input')\n      if (el) {\n        el.focus();\n      }\n    })\n  }, [stage]);\n  \n  // save currently edited proposition index\n  useEffect(() => {\n    localStorage.setItem('mayday/questionnaireIndex', questionnaireIndex);\n  }, [questionnaireIndex]);\n\n   // changes for review\n   useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  }, [reviewVisible]);\n\n  useEffect(() => {\n    if (shareVisible) {\n      let el = document.querySelector('.share-container');\n      if(el) {\n        setTimeout(() => {\n          const top = el.offsetTop;\n          console.log('go', top)\n          window.scrollTo({\n            top,\n            behavior: 'smooth'\n          });\n        }, 700)\n        \n      }\n      \n    }\n    \n  }, [shareVisible]);\n\n  // trick to enable reseting stage if questionnaire is clicked in nav\n  const handleEvent = function(type, payload) {\n    if (type === 'questionnaireClick') {\n      setStage(0);\n    }\n  }\n  useEffect(() => {\n    eventListener.addSubscriber(handleEvent)\n  }, [eventListener])\n\n  /**\n   * ==========================\n   * Temp variables\n   * ==========================\n   */\n  // capture current proposition data\n  const currentProposition = stage > 0 && questionnaireIndex < data.propositions.length && data.propositions[questionnaireIndex];\n  const currentPropositionType = currentProposition && currentProposition.type === 'develop' ? 'develop': 'stop';\n  \n  const questionsLabels = questions[currentPropositionType];\n  const numberOfQuestions = questionsLabels.length;\n\n  let currentText;\n  if (stage > 0 && stage !== -1) {\n    currentText = data.propositions[questionnaireIndex] ? data.propositions[questionnaireIndex][`question${stage}`] : '';\n  }\n  const emailIsValid = data.email && /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(data.email);\n\n  /**\n   * =========\n   * Callbacks\n   * =========\n   */\n  // add a new activity\n  const handleAddActivity = type => {\n    const proposition = createProposition(type, questions)\n    const newData = {\n      ...data,\n      propositions: [\n        ...data.propositions,\n        proposition\n      ]\n    }\n    setQuestionnaireIndex(data.propositions.length)\n    setData(newData);\n    setStage(1);\n  }\n  const handleStopActivity = () => handleAddActivity('stop', questions);\n  const handleDevelopActivity = () => handleAddActivity('develop', questions);\n\n  // go to next question\n  const handleNextStage = () => {\n    let nextStage = stage + 1;\n    if (nextStage > numberOfQuestions) {\n      nextStage = -1;\n    }\n    setStage(nextStage);\n  }\n  // go to previous question\n  const handlePreviousStage = () => {\n    const previousStage = stage - 1;\n    setStage(previousStage);\n  }\n  // go to send choice\n  const handleGoToFinal = () => {\n    setQuestionnaireIndex(undefined);\n    setStage(null);\n    setReviewVisible(false);\n  }\n  // save current question text\n  const handleSaveActiveText = (thatText) => {\n    const newData = {\n      ...data,\n      propositions: data.propositions.map((prop, index) => {\n        if (index === questionnaireIndex) {\n          return {\n            ...prop,\n            [`question${stage}`]: thatText\n          }\n        }\n        return prop;\n      })\n    }\n    setData(newData)\n  }\n  // register active textarea change\n  const handleActiveTextChange = (e) => {\n    handleSaveActiveText(e.target.value);\n  }\n  // register email input change\n  const handleEmailChange = (thatEvent) => {\n    setData({\n      ...data,\n      email: thatEvent.target.value,\n    })\n  }\n  // register given name input change\n  const handleGivenNameChange = (thatEvent) => {\n    setData({\n      ...data,\n      givenName: thatEvent.target.value,\n    })\n  }\n  // register family name input change\n  const handleFamilyNameChange = (thatEvent) => {\n    setData({\n      ...data,\n      familyName: thatEvent.target.value,\n    })\n  }\n  const handleWorkshopContactChange = (thatEvent) => {\n    setData({\n      ...data,\n      workshopContact: data.workshopContact !== undefined ? !data.workshopContact : true,\n    })\n  }\n  // register family name input change\n  const handleAreaOfExpertiseChange = (thatEvent) => {\n    setData({\n      ...data,\n      areaOfExpertise: thatEvent.target.value,\n    })\n  }\n  // send questionnaire to API\n  const handleSubmit = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    const finalData = {\n      ...data, \n      lang\n    }\n    setSendStatus('sending');\n    // this is a mock for the actual request\n    postAnswer(finalData)\n    .then(() => {\n      setSendStatus('success');\n      setTimeout(() => {\n        setSendStatus(undefined)\n      }, 4000)\n    })\n    .catch(e => {\n      console.error(e);\n      setSendStatus('error');\n      setTimeout(() => {\n        setSendStatus(undefined)\n      }, 4000)\n    })\n    \n  }\n\n  // reset questionnaire state (ux + data)\n  // const handleReset = () => {\n  //   setStage(0);\n  //   setData(defaultData);\n  //   setSendStatus(undefined);\n  // }\n\n  // set \"review my propositions\" visibility\n  const handleToggleReviewVisible = () => {\n    setReviewVisible(!reviewVisible);\n  }\n  const toggleShareVisible = () => {\n    setShareVisible(!shareVisible);\n  }\n\n  const renderSubmitForm = () => (\n    <div className=\"important-section\">\n      <h3>{translate('submit-form-explanation')}</h3>\n\n      <p>{translate('submit-form-anonymously-explanation')}</p>\n      <p>{translate('submit-form-with-contact-explanation')}</p>\n      \n      <div>\n        <input type=\"input\" onChange={handleGivenNameChange} value={data.givenName || ''} placeholder={translate('given-name-prompt')} />\n      </div>\n      <div>\n        <input type=\"input\" onChange={handleFamilyNameChange} value={data.familyName || ''} placeholder={translate('family-name-prompt')} />\n      </div>\n      <div>\n        <input type=\"input\" onChange={handleAreaOfExpertiseChange} value={data.areaOfExpertise || ''} placeholder={translate('area-of-expertise-prompt')} />\n      </div>\n      <div>\n        <input type=\"email\" onChange={handleEmailChange} value={data.email || ''} placeholder={translate('email-prompt')} />\n      </div>\n      <div onClick={handleWorkshopContactChange} className={`radio-container ${emailIsValid ? '' : 'disabled'}`}>\n        <input onChange={handleWorkshopContactChange} checked={data.workshopContact || false} type=\"radio\"/>\n        <label>\n          {translate('workshop-contact-prompt')}\n        </label>\n      </div>\n      <ul className=\"buttons-row\">\n        <li onClick={handleToggleReviewVisible}>\n          <button>\n            {translate('review-your-propositions')}\n          </button>\n        </li>\n        <li>\n            <button disabled={false/*!data.email || !emailIsValid*/} className=\"important-button\" onClick={handleSubmit} type=\"submit\">\n              {translate('submit-form')}\n            </button>\n        </li>\n      </ul>\n    </div>\n  )\n  const renderProofRead = () => (\n    <div className=\"propositions-container\">\n            <h2 className=\"propositions-title\">\n              <span>{translate('summary-title')} ({data.propositions.length})\n              </span>\n              <button onClick={handleToggleReviewVisible}>\n                {translate('close')}\n              </button>\n            </h2>\n            {\n              data.propositions\n              .reverse()\n              .map((proposition, propositionIndex) => {\n                const {type} = proposition;\n                const labels = type === 'develop' ? [\n                  translate('to-develop-question-1'),\n                  translate('to-develop-question-2'),\n                  translate('to-develop-question-3'),\n                  translate('to-develop-question-4'),\n                  translate('to-develop-question-5'),\n                ] : \n                [\n                  translate('to-stop-question-1'),\n                  translate('to-stop-question-2'),\n                  translate('to-stop-question-3'),\n                  translate('to-stop-question-4'),\n                ];\n\n                const handleEditProposition = () => {\n                  setQuestionnaireIndex(propositionIndex);\n                  setStage(1)\n                }\n\n                const handleDeleteProposition = () => {\n                  const newData = {\n                    ...data,\n                    propositions: data.propositions.filter((p, i) => i !== propositionIndex)\n                  }\n                  setData(newData)\n                  if (newData.propositions.length === 0) {\n                    setReviewVisible(false);\n                  }\n                }\n                \n                return (\n                  <div key={propositionIndex} className=\"proposition\">\n                    <h3>\n                      <span className=\"proposition-title\">\n                        {translate('Proposition')} {data.propositions.length - propositionIndex} ({translate(proposition.type === 'stop' ? 'add-activity-to-stop': 'add-activity-to-develop' )})\n                      </span>\n                      <span className=\"small-buttons-container\">\n                        <button onClick={handleEditProposition}>\n                          {translate('edit')}\n                        </button>\n                        <button onClick={handleDeleteProposition}>\n                          {translate('delete')}\n                        </button>\n                      </span>\n                    </h3>\n                    \n                    {\n                      labels.map((question, questionIndex) => {\n                        const handleEdit = () => {\n                          setQuestionnaireIndex(propositionIndex);\n                          setStage(questionIndex + 1)\n                        }\n                        return (\n                          <div className=\"question\" key={questionIndex}>\n                            <h4>{question}</h4>\n                            <blockquote>\n                              {proposition[`question${questionIndex + 1}`]}\n                            </blockquote>\n                            <button onClick={handleEdit}>\n                              {translate('edit')}\n                            </button>\n                          </div>\n                        )\n                      })\n                    }\n                  </div>\n                )\n              })\n            }\n          </div>\n  )\n  return (\n    <div>\n      <Helmet>\n        <title>{translate('website-title')} | {translate('questionnaire')}</title>\n      </Helmet>\n      <div>\n        {\n          stage === 0 ?\n          <div className={`question-container ${reviewVisible ? 'normalized': ''}`}>\n            {!reviewVisible && <Md source={lang === 'fr' ? introFr : introEn} />}\n            <ul className={`big-select ${reviewVisible ? 'hidden' : ''}`}>\n              <li><button className=\"stop\" onClick={handleStopActivity}>{translate('add-activity-to-stop')}</button></li>\n              <li><button className=\"develop\" onClick={handleDevelopActivity}>{translate('add-activity-to-develop')}</button></li>\n            </ul>\n\n            <ul className=\"buttons-row\">\n              {\n                data.propositions.length && !reviewVisible ?\n              <li><button className={reviewVisible ? 'active' : ''} onClick={handleToggleReviewVisible}>{reviewVisible ? translate('hide-existing-propositions') : translate('review-your-propositions')} {!reviewVisible && `(${data.propositions.length})`}</button></li>\n                : null\n              }\n              {data.propositions.length && !reviewVisible ?\n               <li><button className=\"important-button\" onClick={handleGoToFinal} >{translate('go-to-submit')}</button></li>\n              : null}\n            </ul>\n          </div>\n          : null\n        }\n        {\n          stage > 0 ?\n          <ul className=\"question-container\">\n              {\n                questionsLabels.map((label, index) => {\n                  if (index === stage - 1) {\n                    return (\n                    <li key={label} className=\"active\">\n                    <h2>{label}</h2>\n                      \n                      <Textarea className=\"active\" value={currentText} onChange={handleActiveTextChange} placeholder={translate('write-here')} />\n                      {currentText.length < TEXT_LIMIT &&\n                      <div className=\"text-length-indicator\">\n                          <i>{translate('char-limit-indicator')}</i>\n                      </div>\n                      }\n                      <ul className=\"buttons-row reverse\">\n                      \n                      {\n                        stage < numberOfQuestions ?\n                        <li><button disabled={currentText.length < TEXT_LIMIT} className={`important-button ${currentPropositionType}`} onClick={handleNextStage}>{translate('next-question')}</button></li>\n                        : <li><button className={`important-button ${currentPropositionType}`} disabled={currentText.length < TEXT_LIMIT} onClick={handleNextStage}>{translate('validate-proposition')}</button></li>\n                      }\n                      {\n                        stage > 1 ?\n                        <li><button className={currentPropositionType} onClick={handlePreviousStage}>{translate('previous-question')}</button></li>\n                        : null\n                      }\n                      </ul>\n                      \n                    </li>);\n                  }\n                  const thatText = currentProposition[`question${index + 1}`];\n                  if (thatText.trim().length) {\n                    const handleClick = () => {\n                      setStage(index + 1)\n                    }\n                    return (\n                      <li onClick={handleClick} key={label}>\n                        <h2>{label}</h2>\n                        <Textarea value={thatText} />\n                      </li>\n                    )\n                  }\n                  return null;\n                })\n              }\n            \n          </ul>\n          : null\n        }\n        {\n          stage === -1 ?\n          <div>\n            {\n              reviewVisible ?\n              renderProofRead() :\n              <>\n                <h2>{translate('thank-you')}</h2>\n                <ul className={`big-select ${reviewVisible ? 'hidden' : ''}`}>\n                  <li><button className=\"stop\" onClick={handleStopActivity}>{translate('add-activity-to-stop-bis')}</button></li>\n                  <li><button className=\"develop\" onClick={handleDevelopActivity}>{translate('add-activity-to-develop-bis')}</button></li>\n                </ul>\n                <ul className=\"buttons-row\">\n                  \n                  <li>\n                      <button className=\"important-button\" onClick={toggleShareVisible} type=\"submit\">\n                        {translate('go-to-submit')}\n                      </button>\n                  </li>\n                </ul>\n                <div className={`share-container ${shareVisible ? 'visible' : 'hidden'}`}>\n                  {renderSubmitForm()}\n                </div>\n              </>\n            }\n          </div> : null\n        }\n        {\n          stage === null ?\n          <form className={`question-container ${reviewVisible ? 'normalized': ''}`} onSubmit={handleSubmit}>\n            {\n              reviewVisible ? null :\n              <div>\n                {renderSubmitForm()}\n              </div>\n            }\n          </form>\n          : null\n        }\n        {\n          sendStatus ?\n          <div className=\"status-container\">\n            <div className=\"status-content\">\n              <i>{translate(sendStatus)}</i>\n            </div>\n          </div>\n          : null\n        }\n        \n        {\n          (stage === 0 || stage === null) && data.propositions.length && reviewVisible ? \n          renderProofRead()\n          : null\n        }\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport Md from 'react-markdown';\nimport {Link} from 'react-router-dom';\nimport {Helmet} from 'react-helmet';\n\nimport introFr from '!!raw-loader!../locales/texts/intro/fr.md';/* eslint import/no-webpack-loader-syntax : 0 */\nimport introEn from '!!raw-loader!../locales/texts/intro/en.md';/* eslint import/no-webpack-loader-syntax : 0 */\n\nexport default function({\n  translate,\n  lang\n}) {\n  return (\n    <div>\n      <Helmet>\n        <title>{translate('website-title')}</title>\n      </Helmet>\n      <div className=\"question-container\">\n        <h1>{translate('website-title')}</h1>\n        <Md source={lang === 'fr' ? introFr : introEn} />\n        <Link className=\"important-link\" to=\"questionnaire\">\n          {translate('questionnaire-prompt')}\n        </Link>\n        <footer>\n            <div>\n              <Link to=\"/mentions\"><span>{translate('legal-mentions')}</span></Link>\n            </div>\n          </footer>\n      </div>\n      \n    </div>\n  )\n}","import React from 'react';\nimport {Helmet} from 'react-helmet';\nimport Md from 'react-markdown';\n\nimport mentionsFr from '!!raw-loader!../locales/texts/legal-mentions/fr.md';/* eslint import/no-webpack-loader-syntax : 0 */\nimport mentionsEn from '!!raw-loader!../locales/texts/legal-mentions/en.md';/* eslint import/no-webpack-loader-syntax : 0 */\n\nexport default function({\n  translate,\n  lang\n}) {\n  return (\n    <div>\n      <Helmet>\n        <title>{translate('website-title')} | {translate('legal-mentions')}</title>\n      </Helmet>\n      <h1>{translate('legal-mentions')}</h1>\n      <Md source={lang === 'fr' ? mentionsFr : mentionsEn} />\n    </div>\n  )\n}","export default \"Legal mentions fr\";","export default \"Legal mentions english\";","import React, {useState, useEffect} from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink as Link\n} from \"react-router-dom\";\n\nimport Questionnaire from './components/Questionnaire';\nimport Home from './components/Home';\nimport LegalMentions from './components/LegalMentions';\n\nimport frLocale from './locales/fr';\nimport enLocale from './locales/en';\n\nconst locales = {\n  fr: frLocale,\n  en: enLocale\n};\n\nconst EventListener = function() {\n  this.subscribers = []\n  this.addSubscriber = (fn) => {\n    this.subscribers.push(fn)\n  }\n  this.onEvent = function(key, payload) {\n    this.subscribers.forEach(subscriber => {\n      subscriber(key, payload)\n    })\n  }\n}\n\nexport default function BasAppicExample() {\n  /**\n   * Get initial lang\n   */\n  let initialLang = 'fr';\n  const localLang = localStorage.getItem('mayday/lang');\n  const browserLang = navigator.language || navigator.userLanguage;\n  if (localLang) {\n    initialLang = localLang\n  }\n  else if (browserLang) {\n    initialLang = browserLang === 'fr' ? 'fr' : 'en';\n  }\n\n  const [lang, setLang] = useState(initialLang);\n\n  /**\n   * Save lang change to local storage\n   */\n  useEffect(() => {\n    localStorage.setItem('mayday/lang', lang);\n  }, [lang]);\n\n  const handleSwitchLang = () => {\n    if (lang === 'fr') {\n      setLang('en');\n    } else {\n      setLang('fr');\n    }\n  }\n  /**\n   * Set translate fn to use throughout the app\n   */\n  const locale = locales[lang];\n  const translate = id => {\n    return locale[id] || id;\n  }\n\n  const [eventListener] = useState(new EventListener())\n\n  const handleQuestionnaireClick = () => {\n    eventListener.onEvent('questionnaireClick')\n  }\n\n\n  return (\n    <Router>\n      \n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\" className=\"home-link\"><span>{translate('website-title')}</span></Link>\n            </li>\n            <li>\n              <Link onClick={handleQuestionnaireClick} to=\"/questionnaire\"><span>{translate('questionnaire')}</span></Link>\n            </li>\n            <li>\n              <span style={{cursor: 'pointer'}} onClick={handleSwitchLang}>\n                {lang === 'fr' ? <b>fr</b> : 'fr'}/{lang === 'fr' ? 'en' : <b>en</b>}\n              </span>\n            </li>\n          </ul>\n        </nav>\n\n        <main>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home {...{translate, lang}} />\n            </Route>\n            <Route path=\"/questionnaire\">\n              <Questionnaire {...{translate, lang, eventListener}} />\n            </Route>\n            <Route path=\"/mentions\">\n              <LegalMentions {...{translate, lang}} />\n            </Route>\n          </Switch>\n        </main>\n        \n      </div>\n    </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}