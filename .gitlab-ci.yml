image: docker:stable

stages:
  - build
  - deploy

variables:
  CLIENT_IMAGE_NAME: $CI_REGISTRY/scpomedialab/ouatterrir-client:$CI_COMMIT_REF_SLUG
  API_IMAGE_NAME: $CI_REGISTRY/scpomedialab/ouatterrir-api:$CI_COMMIT_REF_SLUG
  DOCKER_HOST: tcp://127.0.0.1:2375
  DOCKER_TLS_CERTDIR: ""

services:
    - docker:stable-dind

build_client:
  stage: build
  script:
    - docker build -t $CLIENT_IMAGE_NAME -f ./client/Dockerfile ./client
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
    - docker push $CLIENT_IMAGE_NAME
  environment:
    name: $CI_COMMIT_REF_SLUG
  only:
    - master
    - staging
    - prod
    - tags


build_api:
  stage: build
  script:
    - docker build -t $API_IMAGE_NAME -f Dockerfile .
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
    - docker push $API_IMAGE_NAME
  environment:
    name: $CI_COMMIT_REF_SLUG
  only:
    - master
    - staging
    - prod
    - tags

deploy:
  image:
    name: jrisp/kubehelper:latest
    entrypoint: [""]
  stage: deploy
  dependencies:
    - build_client
    - build_api
  script:
    - NS=ouatterir
    - kubectl config set-cluster k8s --server="$KUBE_URL" --certificate-authority="$KUBE_CA_PEM_FILE"
    - kubectl config set-credentials gitlab-admin --token="$KUBE_TOKEN"
    - kubectl config set-context default --cluster=k8s --user=gitlab-admin
    - kubectl config use-context default
    - kubectl apply -f k8s/namespace.yml
    - cp ${MONGODB_SECRETS} k8s/overlays/$CI_COMMIT_REF_SLUG/mongodb.env
    - kubectl apply -k k8s/overlays/$CI_COMMIT_REF_SLUG
    - kubectl -n ${NS} rollout restart deployment ${NS}-api
    - kubectl -n ${NS} rollout restart deployment ${NS}-client
  environment:
    name: $CI_COMMIT_REF_SLUG
  only:
   - staging
   - prod
